front end to back end

focusing more on back end stuff
    split into 2 parts:
        1) Database (this week)
        2) API Framework (handle requests, responses to front-end client)
            - wk 11 Express

Post-gres(sp?) - Postbird (need to download)

note: make w10 pull

Postgres terminal commands:

    psql - connect to postgres service
        (postgres needs to know targeted database and to know username in system)
        psql (databaseName) (username)

    \l - lists all databases
        : Name - Owner

    \du - lists all users

    \c database name: connects to the named database

    \dt - lists tables of current DB

    \d tablename - lists table details

    \q - close postgres

Steps to set up a DB for a project:

    1) Create a user
        CREATE USER username WITH attributes PASSWORD 'password'
            (must be in single quotes for password)

        note: cannot drop a user without dropping the database this controlled
            by said user first
        Drop commands:
            1 - DROP USER username;
            2 - DROP DATABASE databaseName;

    IMPORTANT - ALL SQL COMMANDS ARE ALL ENDED WITH A SEMICOLON

    2) Create the database
        CREATE DATABASE databaseName WITH OWNER username

    3) Create tables
        CREATE TABLE people (
            id SERIAL PRIMARY KEY,
            first_name VARCHAR(30),
            last_name VARCHAR(30),
            age SMALLINT
        )

    4) Insert data


Day 2 Notes

Numeric (x, x) - first number: number of digits, second number: scalor

Running a SQL file:
    psql -d boardgame_dev < path to file

Different types of relationships
    1) 1 - M : one to many -- board games to reviews
    2) 1 - 1 : one to one // won't build in a/A
    3) M - M : many to many
