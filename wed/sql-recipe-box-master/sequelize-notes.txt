Step 1 (if necessary)
    Initialize node
        npm init -y

Step 2
    Install necessary packages
        sequelize@^5.0.0
        sequelize-cli^@5.0.0
        pg (pg version 8.6.0 or higher)

Step 3
    Initialize sequelize
        npx sequelize-cli init

Step 4
    Configure Sequelize
        Change username
            Change the user in postgres
        Change password
        Change Database name
        Change dialect to postgres
        "seederStorage": "sequelize"

Step 5
    Create database
        npx sequelize db:create
        npx sequelize db:drop (destroys database)

Step 6
    Create Tables (migrations/models)
    Migrations - Creating tables in the DB
    Models - Interact with tables for queries

    Migrations - ALWAYS PLURAL AND CAPITALIZED
    Models - Capitalized and Singular

    npx sequelize model:generate --name ModelName -- attributes colName:dataType,colName:dataType (generates a model and a matching migration)
    npx sequelize db:migrate
    npx sequelize db:migrate:undo:all

Step 7
    Create Associations
        hasOne
        hasMany
        belongsTo
        belongsToMany

Step 8
    Seed data
        npx sequelize seed:generate --name itemSeeds

        npx sequelize db:seed:all
        npx sequelzie db:seed:undo:all

If you need to reset your DB:
    npx sequelize db:seed:undo:all
    npx seqeulize db:migrate:undo:all
    npx sequelize db:migrate
    npx sequelize db:seed:all

    npx sequelize db:drop
    npx sequelize db:create
    npx sequelize db:migrate
    npx sequelize db:seed:all

_____________________________________________________________________________________________________

Thurs

queries.js file

    const {User, Post} = require(file name and path); // importing all files, import a folder

Sequelize query methods
    create
    build
    save
    destroy
    findByPk
    findOne
    findAll

When writing queries, could save info from databasea into a variable to keep track.

Can use 'WHERE' methods in SQL into Sequelize
